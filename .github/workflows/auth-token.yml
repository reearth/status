name: Generate Authentication Bearer Token

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0,12 * * *'

jobs:

  generate-app-token:
    runs-on: ubuntu-latest
    steps:
      - name: Generate app token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
    outputs:
      token: ${{ steps.app-token.outputs.token }}

  set-bearer-token-classic:
    runs-on: ubuntu-latest
    needs: generate-app-token
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ needs.generate-app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: false
      - name: Generate bearer token
        id: bearer-token
        run: |
          token=$( curl -X POST \
            --url 'https://${{ secrets.REEARTH_CLASSIC_AUTH0_DOMAIN }}/oauth/token' \
            --header 'content-type: application/json' \
            --data '{"grant_type": "client_credentials", "audience": "${{ secrets.REEARTH_CLASSIC_AUTH0_AUDIENCE }}", "client_id": "${{ secrets.REEARTH_CLASSIC_AUTH0_CLIENT_ID }}", "client_secret": "${{ secrets.REEARTH_CLASSIC_AUTH0_CLIENT_SECRET }}"}' \
            | jq -r '.token' )
          echo "bearer_token=$token" >> $GITHUB_OUTPUTS
      - name: Save token in GitHub secrets
        run: |
          gh secret set REEARTH_CLASSIC_BEARER_TOKEN --body "${{ steps.bearer-token.outputs.bearer_token }}"
        env:
          GH_TOKEN: ${{ needs.generate-app-token.outputs.token }}

  set-bearer-token-cms:
    runs-on: ubuntu-latest
    needs: generate-app-token
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ needs.generate-app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: false
      - name: Generate bearer token
        id: bearer-token
        run: |
          token=$( curl -X POST \
            --url 'https://${{ secrets.REEARTH_CMS_AUTH0_DOMAIN }}/oauth/token' \
            --header 'content-type: application/json' \
            --data '{"grant_type": "client_credentials", "audience": "${{ secrets.REEARTH_CMS_AUTH0_AUDIENCE }}", "client_id": "${{ secrets.REEARTH_CMS_AUTH0_CLIENT_ID }}", "client_secret": "${{ secrets.REEARTH_CMS_AUTH0_CLIENT_SECRET }}"}' \
            | jq -r '.token' )
          echo "bearer_token=$token" >> $GITHUB_OUTPUTS
      - name: Save token in GitHub secrets
        run: |
          gh secret set REEARTH_CMS_BEARER_TOKEN --body "${{ steps.bearer-token.outputs.bearer_token }}"
        env:
          GH_TOKEN: ${{ needs.generate-app-token.outputs.token }}

  set-bearer-token-visualizer:
    runs-on: ubuntu-latest
    needs: generate-app-token
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ needs.generate-app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: false
      - name: Generate bearer token
        id: bearer-token
        run: |
          token=$( curl -X POST \
            --url 'https://${{ secrets.REEARTH_VISUALIZER_AUTH0_DOMAIN }}/oauth/token' \
            --header 'content-type: application/json' \
            --data '{"grant_type": "client_credentials", "audience": "${{ secrets.REEARTH_VISUALIZER_AUTH0_AUDIENCE }}", "client_id": "${{ secrets.REEARTH_VISUALIZER_AUTH0_CLIENT_ID }}", "client_secret": "${{ secrets.REEARTH_VISUALIZER_AUTH0_CLIENT_SECRET }}"}' \
            | jq -r '.token' )
          echo "bearer_token=$token" >> $GITHUB_OUTPUTS
      - name: Save token in GitHub secrets
        run: |
          gh secret set REEARTH_VISUALIZER_BEARER_TOKEN --body "${{ steps.bearer-token.outputs.bearer_token }}"
        env:
          GH_TOKEN: ${{ needs.generate-app-token.outputs.token }}
